var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.12,1,1.894]],["body/controllers/AppController.html",[0,1.842,1,3.115,2,1.503,3,0.576,4,0.503,5,0.503,6,3.358,7,0.706,8,0.037,9,1.014,10,2.69,11,3.358,12,0.576,13,0.077,14,2.262,15,1.831,16,0.031,17,0.031]],["title/modules/AppModule.html",[18,1.12,19,1.894]],["body/modules/AppModule.html",[1,2.879,2,1.491,3,0.416,4,0.363,5,0.363,7,0.761,8,0.037,9,0.733,10,2.681,11,2.426,12,0.416,13,0.055,16,0.025,17,0.025,18,1.702,19,3.659,20,1.323,21,1.323,22,1.635,23,1.635,24,1.323,25,2.563,26,1.635,27,2.426,28,2.426,29,2.426,30,2.681,31,2.988,32,2.418,33,2.244,34,1.635,35,1.467,36,2.939,37,2.521,38,2.939,39,2.939,40,2.939,41,2.939]],["title/injectables/AppService.html",[10,1.513,42,1.12]],["body/injectables/AppService.html",[3,0.552,4,0.482,5,0.482,7,0.552,8,0.037,9,0.972,10,2.424,12,0.552,13,0.073,16,0.03,17,0.03,42,1.794,43,2.169,44,3.219,45,0.788,46,2.186,47,5.538,48,1.075,49,3.9,50,1.755,51,1.628,52,1.755,53,3.9,54,3.9]],["title/controllers/AuthController.html",[0,1.12,55,1.894]],["body/controllers/AuthController.html",[0,1.188,2,1.188,3,0.455,4,0.398,5,0.398,7,0.607,8,0.037,9,0.802,12,0.455,13,0.061,14,1.788,15,1.448,16,0.026,17,0.026,45,0.65,46,1.931,48,0.886,50,1.448,51,1.618,52,1.448,55,2.679,56,2.655,57,2.285,58,3.216,59,2.684,60,3.541,61,3.216,62,4.29,63,1.33,64,1.31,65,4.29,66,3.216,67,1.605,68,1.605,69,1.31,70,3.658,71,1.448,72,1.931,73,2.655,74,3.216,75,2.655,76,3.216,77,2.009,78,2.285,79,1.788,80,3.216,81,3.216,82,3.216,83,3.216]],["title/modules/AuthModule.html",[18,1.12,30,1.513]],["body/modules/AuthModule.html",[2,1.58,3,0.453,4,0.396,5,0.396,7,0.728,8,0.037,9,0.798,12,0.453,13,0.06,16,0.026,17,0.026,18,1.779,20,1.441,21,1.441,22,1.781,23,1.781,24,1.441,25,2.678,26,2.678,30,2.808,32,1.925,33,2.378,34,1.781,35,1.598,37,2,55,3.008,72,2.673,73,2.643,84,2.643,85,2.643,86,2.643,87,3.202,88,2.672,89,3.202,90,2.643]],["title/injectables/AuthServices.html",[42,1.12,72,1.365]],["body/injectables/AuthServices.html",[3,0.401,4,0.35,5,0.35,7,0.557,8,0.037,9,0.705,12,0.401,13,0.053,15,1.273,16,0.024,17,0.024,42,1.452,43,1.573,45,0.572,46,1.769,48,1.245,50,1.769,51,1.914,52,1.769,59,2.952,60,3.245,63,1.083,67,1.961,68,1.961,69,1.601,72,1.769,77,1.767,78,3.21,79,2.512,88,1.767,91,2.335,92,4.029,93,2.793,94,2.335,95,2.218,96,2.829,97,2.829,98,2.829,99,3.931,100,2.829,101,2.335,102,2.829,103,2.335,104,2.335,105,2.01,106,2.455,107,2.829,108,2.829,109,2.829,110,2.335]],["title/classes/CreatePostDto.html",[13,0.057,111,1.686]],["body/classes/CreatePostDto.html",[3,0.192,4,0.167,5,0.167,7,0.561,8,0.037,12,0.192,13,0.054,16,0.014,17,0.014,45,0.273,48,1.289,51,1.674,63,1.437,64,1.906,69,1.997,71,1.006,110,2.74,111,1.243,112,0.609,113,3.41,114,2.726,115,0.961,116,1.286,117,2.359,118,2.858,119,2.858,120,3.616,121,2.858,122,2.858,123,3.675,124,2.03,125,2.858,126,2.359,127,1.353,128,1.353,129,1.353,130,1.353,131,2.073,132,1.353,133,2.236,134,1.589,135,1.589,136,2.236,137,1.353,138,1.353,139,1.353,140,2.236,141,2.09,142,2.74,143,3.319,144,1.397,145,1.846,146,1.353,147,1.353,148,2.236,149,2.236,150,2.236,151,2.236,152,2.236,153,2.473,154,2.236,155,2.236,156,1.353,157,1.353,158,1.117,159,2.236,160,2.236,161,2.858,162,1.846,163,2.236,164,1.353,165,1.353,166,1.353,167,3.319,168,3.319,169,1.846,170,2.236,171,2.236,172,2.236,173,2.236,174,2.236,175,2.858,176,1.353,177,3.034,178,1.846,179,1.846,180,1.846,181,1.353,182,1.353,183,1.353,184,1.353,185,3.319,186,1.353,187,1.353,188,1.353,189,2.858,190,1.353,191,2.236,192,2.236,193,2.296,194,2.976,195,2.611,196,2.236,197,1.117,198,1.117,199,2.236,200,0.675,201,0.961,202,3.268,203,3.268,204,0.675,205,1.353,206,1.353,207,0.961,208,0.961,209,0.961,210,0.961,211,1.353,212,2.236,213,1.117,214,1.353,215,1.353,216,1.117,217,1.353,218,1.353,219,1.353,220,1.117,221,0.961,222,0.961]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.057,131,1.894]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.493,4,0.431,5,0.431,7,0.493,8,0.037,12,0.493,13,0.085,16,0.028,17,0.028,45,0.704,48,1.246,51,1.515,63,1.246,64,1.842,112,1.568,113,3.567,114,2.791,115,2.476,116,2.035,131,2.824,193,3.318,195,3.213,200,1.739,208,3.567,209,3.567,221,3.567,222,3.567,223,3.484,224,3.484,225,3.484]],["title/classes/CreateUserDto.html",[13,0.057,226,1.686]],["body/classes/CreateUserDto.html",[3,0.376,4,0.329,5,0.329,7,0.376,8,0.036,12,0.376,13,0.071,16,0.023,17,0.023,45,0.537,48,1.309,51,1.832,63,1.309,64,1.935,77,2.729,78,3.104,112,1.197,116,1.694,169,3.107,193,2.967,194,2.674,195,3.375,197,2.195,198,2.195,200,1.327,220,3.107,226,2.093,227,4.138,228,1.889,229,3.606,230,3.606,231,2.659,232,2.659,233,2.659,234,2.659,235,2.659,236,2.659,237,2.659,238,4.75,239,3.764,240,3.764,241,3.764,242,3.764,243,3.764,244,5.205,245,3.764,246,2.093,247,3.764,248,3.764,249,2.659,250,3.764,251,2.659,252,3.764,253,2.659,254,2.659]],["title/classes/GetUsersParamDto.html",[13,0.057,255,1.686]],["body/classes/GetUsersParamDto.html",[3,0.455,4,0.398,5,0.398,7,0.683,8,0.037,12,0.455,13,0.091,16,0.026,17,0.026,45,0.65,48,0.886,63,1.478,64,1.31,69,1.747,79,2.983,106,2.679,112,1.448,116,1.931,134,3.048,135,3.048,141,1.605,153,2.679,158,2.655,194,3.048,200,1.605,201,2.285,203,3.541,204,1.605,246,2.863,255,2.385,256,3.541,257,2.679,258,2.655,259,4.29,260,3.048,261,3.216,262,3.216,263,3.541]],["title/classes/PatchPostDto.html",[13,0.057,264,1.894]],["body/classes/PatchPostDto.html",[3,0.457,4,0.399,5,0.399,7,0.761,8,0.037,12,0.457,13,0.081,16,0.026,17,0.026,45,0.653,48,0.89,63,1.333,64,1.316,71,1.454,79,2.69,111,1.796,112,1.454,114,1.796,116,1.936,193,2.687,200,1.612,202,3.551,204,2.147,207,2.295,210,2.295,246,2.392,263,3.551,264,2.687,265,3.551,266,2.666,267,3.551,268,4.302,269,3.23,270,3.23,271,2.666,272,4.302,273,2.295,274,3.23,275,2.666,276,3.23,277,3.23,278,3.23,279,3.23,280,3.23,281,3.23,282,2.295]],["title/classes/PatchUserDto.html",[13,0.057,283,1.894]],["body/classes/PatchUserDto.html",[3,0.576,4,0.503,5,0.503,7,0.706,8,0.037,12,0.576,13,0.077,16,0.031,17,0.031,112,1.831,207,2.891,226,2.262,228,2.891,267,4.116,271,3.358,273,2.891,283,3.115,284,3.358,285,4.986,286,3.358,287,3.358]],["title/controllers/PostsController.html",[0,1.12,288,1.894]],["body/controllers/PostsController.html",[0,0.852,2,0.852,3,0.327,4,0.285,5,0.285,7,0.671,8,0.038,9,0.575,12,0.327,13,0.043,14,1.283,15,1.039,16,0.021,17,0.021,45,0.466,46,1.529,48,1.111,50,1.815,51,1.491,52,1.529,57,1.64,63,1.111,64,1.643,67,2.012,68,2.012,69,1.643,70,1.64,71,2.232,111,2.851,114,1.889,124,1.64,141,1.696,204,1.152,210,1.64,264,3.203,282,2.865,288,2.122,289,1.905,290,3.398,291,3.398,292,3.398,293,2.308,294,2.308,295,3.398,296,2.122,297,3.398,298,2.308,299,4.448,300,3.398,301,4.033,302,2.308,303,2.308,304,2.308,305,3.398,306,2.308,307,2.805,308,2.308,309,2.308,310,2.308,311,1.905,312,2.012,313,1.905,314,2.805,315,2.805,316,1.905,317,2.308,318,2.308,319,2.308,320,2.308,321,2.308,322,2.308,323,2.308,324,1.905,325,1.905,326,2.308,327,2.308,328,2.308,329,2.308]],["title/modules/PostsModule.html",[18,1.12,31,1.686]],["body/modules/PostsModule.html",[2,1.603,3,0.463,4,0.404,5,0.404,7,0.734,8,0.037,9,0.816,12,0.463,13,0.062,16,0.027,17,0.027,18,1.798,20,1.473,21,1.473,22,1.819,23,1.819,24,1.473,25,2.707,26,1.819,31,3.194,32,2.496,33,2.413,34,1.819,35,1.633,37,2.71,90,2.701,288,3.041,312,2.767,313,2.701,330,2.701,331,2.701,332,3.272,333,3.272,334,3.272]],["title/injectables/PostsService.html",[42,1.12,312,1.513]],["body/injectables/PostsService.html",[3,0.42,4,0.366,5,0.366,7,0.575,8,0.038,9,0.738,12,0.42,13,0.056,14,1.647,15,1.333,16,0.025,17,0.025,42,1.499,43,1.647,45,0.599,46,1.826,48,1.118,50,1.333,51,1.551,52,1.333,59,2.574,63,1.118,67,2.025,68,2.025,69,1.653,71,1.826,93,2.105,94,2.446,95,2.194,105,2.105,106,3.257,117,4.11,126,3.35,260,2.883,307,4.305,312,2.025,335,2.446,336,3.35,337,2.963,338,4.058,339,2.963,340,2.963,341,2.963,342,4.058]],["title/injectables/UserService.html",[42,1.12,95,1.235]],["body/injectables/UserService.html",[3,0.326,4,0.284,5,0.284,7,0.57,8,0.038,9,0.574,12,0.326,13,0.043,15,1.036,16,0.021,17,0.021,42,1.252,43,1.279,45,0.465,46,1.526,48,1.109,50,1.526,51,1.66,52,1.526,59,2.755,63,1.109,67,2.009,68,2.009,69,1.64,72,2.131,75,2.799,77,2.774,79,2.238,88,1.437,92,2.799,93,2.409,95,1.381,101,1.899,103,1.899,104,1.899,105,1.635,144,2.774,229,3.667,230,3.323,246,2.849,255,2.755,257,1.437,296,1.437,336,3.323,343,1.899,344,3.39,345,2.301,346,2.301,347,2.301,348,3.667,349,2.301,350,3.39,351,2.301,352,1.899,353,1.899,354,2.301,355,2.301,356,2.301,357,2.301,358,2.301,359,3.39,360,4.026,361,3.39,362,2.301,363,2.301,364,2.301,365,2.301,366,2.301]],["title/controllers/UsersController.html",[0,1.12,367,1.894]],["body/controllers/UsersController.html",[0,0.544,2,0.544,3,0.208,4,0.182,5,0.182,7,0.584,8,0.037,9,0.367,12,0.208,13,0.028,14,0.819,15,0.663,16,0.015,17,0.015,45,0.297,46,1.079,48,1.059,50,1.73,51,1.518,52,1.956,57,1.046,59,2.923,63,1.197,64,1.566,67,1.512,68,1.918,69,1.234,70,2.153,71,1.572,95,1.234,106,1.497,124,1.046,134,2.482,135,2.482,141,2.056,144,3.007,153,2.182,162,1.215,204,0.735,226,2.518,246,2.795,255,1.942,257,2.829,260,1.703,282,1.703,283,2.574,287,1.978,296,1.497,311,1.978,314,1.978,315,1.978,316,1.215,324,1.215,325,1.215,348,3.402,352,1.215,353,1.215,367,1.497,368,1.215,369,3.031,370,3.493,371,3.031,372,2.396,373,3.493,374,1.472,375,1.472,376,3.493,377,1.472,378,1.472,379,1.472,380,2.396,381,2.396,382,2.396,383,1.472,384,2.396,385,2.396,386,1.472,387,3.493,388,3.493,389,1.472,390,2.396,391,1.472,392,2.396,393,1.472,394,2.396,395,1.472,396,3.493,397,1.472,398,1.472,399,3.031,400,1.472,401,1.472,402,1.472,403,1.215,404,3.031,405,1.472,406,1.472,407,1.472,408,1.215,409,1.472,410,1.472,411,1.472,412,1.472,413,1.472,414,1.472,415,1.472,416,1.472,417,1.472,418,1.472,419,1.472,420,1.472,421,1.472,422,1.472,423,1.472,424,1.215,425,1.472,426,1.472,427,1.472,428,1.472,429,1.472,430,1.472,431,3.493,432,3.493,433,3.493,434,1.472,435,1.472]],["title/modules/UsersModule.html",[18,1.12,32,1.365]],["body/modules/UsersModule.html",[2,1.58,3,0.453,4,0.396,5,0.396,7,0.728,8,0.037,9,0.798,12,0.453,13,0.06,16,0.026,17,0.026,18,1.779,20,1.441,21,1.441,22,1.781,23,1.781,24,1.441,25,2.678,26,2.678,30,2.134,32,2.532,33,2.378,34,1.781,35,1.598,37,2,88,2.672,95,2.419,367,3.008,403,2.643,436,2.643,437,2.643,438,2.643,439,3.202,440,3.202,441,3.202]],["title/coverage.html",[442,2.929]],["body/coverage.html",[0,1.797,1,1.754,5,0.347,6,2.318,8,0.037,10,1.401,13,0.1,16,0.024,17,0.024,24,1.264,42,1.797,44,2.318,55,1.754,56,2.318,63,0.774,72,1.264,91,2.318,95,1.144,111,1.561,113,2.778,114,2.174,115,2.778,131,1.754,208,1.995,209,1.995,226,1.561,227,2.318,228,2.778,255,1.561,256,2.318,257,1.754,258,2.318,264,1.754,265,2.318,266,2.318,283,1.754,284,2.318,288,1.754,289,2.318,296,1.754,312,1.401,335,2.318,343,2.318,367,1.754,368,2.318,442,1.995,443,2.318,444,2.808,445,2.808,446,5.928,447,4.499,448,4.866,449,4.499,450,2.318,451,2.808,452,2.808,453,3.91,454,2.808,455,2.808,456,2.808,457,2.808]],["title/dependencies.html",[21,1.639,458,2.096]],["body/dependencies.html",[8,0.038,9,0.967,13,0.091,16,0.03,17,0.03,21,1.746,200,1.936,201,2.757,204,1.936,273,2.757,286,3.203,459,3.88,460,3.88,461,5.278,462,3.88,463,3.88,464,3.88,465,3.88,466,3.88,467,3.88,468,3.88,469,3.88,470,3.88,471,3.88,472,3.88,473,3.88]],["title/miscellaneous/enumerations.html",[474,1.586,475,3.007]],["body/miscellaneous/enumerations.html",[8,0.037,16,0.029,17,0.029,45,0.757,71,2.131,120,3.909,144,2.958,145,3.909,177,3.909,178,3.909,179,3.909,180,3.909,213,3.909,216,3.909,222,4.197,474,2.339,475,3.091,476,3.744,477,3.744,478,3.744,479,3.744]],["title/miscellaneous/functions.html",[474,1.586,480,3.007]],["body/miscellaneous/functions.html",[8,0.033,16,0.033,17,0.033,24,2.542,45,0.916,450,3.743,474,2.833,480,3.743,481,4.535]],["title/index.html",[45,0.513,482,2.539,483,2.539]],["body/index.html",[4,0.234,8,0.035,16,0.018,17,0.018,35,2.293,141,0.943,142,1.56,153,2.511,221,1.343,275,1.56,408,3.794,424,1.56,442,1.343,443,2.412,484,1.89,485,1.89,486,3.573,487,2.923,488,1.89,489,1.89,490,1.89,491,1.89,492,2.923,493,3.573,494,1.89,495,1.89,496,1.89,497,4.02,498,1.89,499,4.95,500,1.89,501,4.792,502,1.89,503,1.89,504,1.89,505,2.923,506,1.89,507,2.923,508,1.89,509,3.573,510,1.89,511,2.923,512,1.89,513,1.89,514,1.89,515,1.89,516,1.89,517,4.02,518,4.95,519,2.923,520,1.89,521,1.89,522,1.89,523,1.89,524,4.596,525,2.923,526,4.02,527,1.89,528,2.923,529,1.89,530,1.89,531,2.923,532,4.347,533,4.02,534,1.89,535,2.923,536,1.89,537,1.89,538,1.89,539,1.89,540,4.02,541,1.89,542,1.89,543,1.89,544,1.89,545,1.89,546,2.923,547,1.89,548,1.89,549,1.89,550,1.89,551,1.89,552,2.923,553,1.89,554,1.89,555,1.89,556,2.923,557,1.89,558,1.89,559,3.319,560,2.923,561,1.89,562,1.89,563,1.89,564,1.89,565,1.89,566,1.89,567,1.89,568,1.89,569,2.923,570,1.89,571,1.89,572,1.89,573,1.89,574,3.573,575,1.89,576,1.89,577,1.89,578,1.89,579,1.89,580,2.923,581,1.89,582,1.89,583,1.89,584,1.89,585,1.89,586,2.923,587,1.89,588,1.89,589,1.89,590,2.923,591,2.923,592,1.89,593,1.89,594,1.89,595,1.89,596,1.89,597,1.89,598,1.89,599,1.89,600,1.89,601,1.89,602,1.56,603,1.89,604,1.89,605,1.89,606,1.89,607,1.89,608,1.89,609,1.56]],["title/modules.html",[20,1.856]],["body/modules.html",[8,0.031,16,0.031,17,0.031,19,2.627,20,1.893,30,2.098,31,2.338,32,1.893,559,4.692,610,5.684,611,5.684,612,5.684]],["title/overview.html",[613,3.403]],["body/overview.html",[2,1.116,8,0.036,10,2.334,16,0.025,17,0.025,18,1.116,19,3.613,20,1.36,21,1.36,22,1.681,23,1.681,24,1.36,25,1.681,26,1.681,27,2.495,28,2.495,29,2.495,30,2.703,31,3.083,32,2.495,33,2.287,34,1.681,35,1.508,43,1.681,72,2.495,84,2.495,85,2.495,86,2.495,95,2.258,112,1.36,312,2.334,330,2.495,331,2.495,436,2.495,437,2.495,438,2.495,613,2.495,614,4.676,615,3.022]],["title/properties.html",[116,1.639,458,2.096]],["body/properties.html",[8,0.037,16,0.032,17,0.032,116,2.005,141,2.223,602,3.677,609,3.677,616,4.454,617,4.454,618,4.454]],["title/routes.html",[619,3.403]],["body/routes.html",[8,0.034,16,0.034,17,0.034,619,3.908]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":617,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":260,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["1.1.26",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["10})@apiquery({name",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["11.0.1",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["11.1.3",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":366,"title":{},"body":{"injectables/UserService.html":{}}}],["16t07:46:32+0000",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["16t07:46:32+0000'})@isiso8601()@isoptional",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["2",{"_index":342,"title":{},"body":{"injectables/PostsService.html":{}}}],["2.1.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["201",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{}}}],["2024",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["4",{"_index":614,"title":{},"body":{"overview.html":{}}}],["6",{"_index":615,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["added",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["again",{"_index":281,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["allowing",{"_index":547,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":596,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty()@isint()@isnotempty",{"_index":269,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@isnotempty",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({description",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({enum",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional()@isarray()@isoptional()@isstring({each",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isoptional()@isstring",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isoptional()@isurl",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional({description",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["application'})@apiresponse({status",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["applications",{"_index":492,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":55,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":602,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["authservices",{"_index":72,"title":{"injectables/AuthServices.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":535,"title":{},"body":{"index.html":{}}}],["backers",{"_index":597,"title":{},"body":{"index.html":{}}}],["based",{"_index":530,"title":{},"body":{"index.html":{}}}],["blog",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["board",{"_index":589,"title":{},"body":{"index.html":{}}}],["bob@gmail.com",{"_index":364,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["body(new",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{}}}],["body.id",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.password",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["bon",{"_index":362,"title":{},"body":{"injectables/UserService.html":{}}}],["boolean",{"_index":98,"title":{},"body":{"injectables/AuthServices.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":612,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":610,"title":{},"body":{"modules.html":{}}}],["building",{"_index":487,"title":{},"body":{"index.html":{}}}],["channel",{"_index":562,"title":{},"body":{"index.html":{}}}],["character",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":524,"title":{},"body":{"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":546,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":529,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":84,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":330,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":332,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":331,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":436,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":438,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":437,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":553,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('body",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('createpostdto",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log('patchpostdto",{"_index":329,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log('user",{"_index":108,"title":{},"body":{"injectables/AuthServices.html":{}}}],["console.log(createuserdto",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(getusersparamdto",{"_index":355,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(id",{"_index":365,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(patchuserdto",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["const",{"_index":105,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(userservice",{"_index":94,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":568,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":442,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["created",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":111,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":131,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuser",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":226,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["date",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":564,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":517,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":534,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":525,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":545,"title":{},"body":{"index.html":{}}}],["description",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":502,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":576,"title":{},"body":{"index.html":{}}}],["discord",{"_index":561,"title":{},"body":{"index.html":{}}}],["dive",{"_index":563,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":443,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":360,"title":{},"body":{"injectables/UserService.html":{}}}],["draft",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dto",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["dto.ts",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["dto.ts:108",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:27",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:35",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:46",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:54",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:59",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:6",{"_index":224,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["dto.ts:67",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:72",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:80",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:87",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts:9",{"_index":225,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["dto/create",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{}}}],["dto/patch",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["dtos/create",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/get",{"_index":352,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["dtos/patch",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["e2e",{"_index":512,"title":{},"body":{"index.html":{}}}],["each",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":488,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":523,"title":{},"body":{"index.html":{}}}],["eight",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["email",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["endpoint",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["ensure",{"_index":521,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":579,"title":{},"body":{"index.html":{}}}],["entries",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["enum",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":475,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error('unauthorized",{"_index":358,"title":{},"body":{"injectables/UserService.html":{}}}],["example",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["experience",{"_index":566,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":267,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{}}}],["fast",{"_index":538,"title":{},"body":{"index.html":{}}}],["featuredimageurl",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":549,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":540,"title":{},"body":{"index.html":{}}}],["field",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["findall",{"_index":336,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UserService.html":{}}}],["findall(getusersparamdto",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["findall(userid",{"_index":338,"title":{},"body":{"injectables/PostsService.html":{}}}],["findbyid",{"_index":344,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":350,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["focus",{"_index":548,"title":{},"body":{"index.html":{}}}],["follow",{"_index":583,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["framework",{"_index":486,"title":{},"body":{"index.html":{}}}],["full",{"_index":578,"title":{},"body":{"index.html":{}}}],["function",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":480,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":543,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id')@apioperation({summary",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":482,"title":{"index.html":{}},"body":{}}],["getuserparamdto",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getuserparamdto",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":255,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["global",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["graph",{"_index":571,"title":{},"body":{"index.html":{}}}],["grow",{"_index":593,"title":{},"body":{"index.html":{}}}],["hands",{"_index":565,"title":{},"body":{"index.html":{}}}],["handy",{"_index":554,"title":{},"body":{"index.html":{}}}],["hello",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":569,"title":{},"body":{"index.html":{}}}],["here",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["https://nestjs.com",{"_index":606,"title":{},"body":{"index.html":{}}}],["id",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["information",{"_index":527,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":551,"title":{},"body":{"index.html":{}}}],["inject",{"_index":101,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/UserService.html":{}}}],["inject(forwardref",{"_index":103,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AppService.html":{},"injectables/AuthServices.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthServices.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthServices.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["install",{"_index":542,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":500,"title":{},"body":{"index.html":{}}}],["interact",{"_index":572,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":92,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/UserService.html":{}}}],["isemail",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":263,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["iso8601",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":223,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":586,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":588,"title":{},"body":{"index.html":{}}}],["john",{"_index":359,"title":{},"body":{"injectables/UserService.html":{}}}],["john@gmail.com",{"_index":361,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":599,"title":{},"body":{"index.html":{}}}],["json",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":603,"title":{},"body":{"index.html":{}}}],["key",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"index.html":{}}}],["lasname",{"_index":363,"title":{},"body":{"injectables/UserService.html":{}}}],["lastname",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["learn",{"_index":557,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":609,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":591,"title":{},"body":{"index.html":{}}}],["limit",{"_index":348,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["linkedin",{"_index":585,"title":{},"body":{"index.html":{}}}],["list",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["literal",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{}}}],["login(@body",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":99,"title":{},"body":{"injectables/AuthServices.html":{}}}],["looking",{"_index":528,"title":{},"body":{"index.html":{}}}],["loop",{"_index":581,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["makes",{"_index":536,"title":{},"body":{"index.html":{}}}],["managing",{"_index":550,"title":{},"body":{"index.html":{}}}],["matches",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["mau",{"_index":532,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["meta",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["minimum",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":474,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":590,"title":{},"body":{"index.html":{}}}],["mode",{"_index":505,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":526,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":604,"title":{},"body":{"index.html":{}}}],["name",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["need",{"_index":275,"title":{},"body":{"classes/PatchPostDto.html":{},"index.html":{}}}],["nest",{"_index":493,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":608,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":518,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":273,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":544,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":485,"title":{},"body":{"index.html":{}}}],["npm",{"_index":499,"title":{},"body":{"index.html":{}}}],["number",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["number})@isoptional()@isint()@type(undefined",{"_index":261,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["object",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":587,"title":{},"body":{"index.html":{}}}],["official",{"_index":533,"title":{},"body":{"index.html":{}}}],["one",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["open",{"_index":592,"title":{},"body":{"index.html":{}}}],["optional",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["options",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":613,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":458,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param.dto",{"_index":353,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["param.dto.ts",{"_index":258,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:15",{"_index":262,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["params,query",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["parseintpipe",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":577,"title":{},"body":{"index.html":{}}}],["partial",{"_index":272,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype",{"_index":271,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":268,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":285,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["passing",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["password",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":282,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:id",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchpost",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpost(@body",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpost(patchpostdto",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpostdto",{"_index":264,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchuser",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":283,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["per",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["pipe",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["platform",{"_index":531,"title":{},"body":{"index.html":{}}}],["please",{"_index":560,"title":{},"body":{"index.html":{}}}],["possible",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["post",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["post('/login",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["posts",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["posts.controller",{"_index":334,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts.dto",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.dto.ts",{"_index":266,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["posts.dto.ts:11",{"_index":270,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["posts/posts.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":288,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":312,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["prevent",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":104,"title":{},"body":{"injectables/AuthServices.html":{},"injectables/UserService.html":{}}}],["production",{"_index":507,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":484,"title":{},"body":{"index.html":{}}}],["project",{"_index":497,"title":{},"body":{"index.html":{}}}],["properties",{"_index":116,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.services",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["published",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["published''})@isenum(poststatus)@isnotempty",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["publishon",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["quantity",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":558,"title":{},"body":{"index.html":{}}}],["re",{"_index":276,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["read",{"_index":600,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":516,"title":{},"body":{"index.html":{}}}],["real",{"_index":573,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["removed",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["repeetition",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["replaceuser",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":496,"title":{},"body":{"index.html":{}}}],["request",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":539,"title":{},"body":{"index.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":552,"title":{},"body":{"index.html":{}}}],["response",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["review",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["routes",{"_index":619,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":501,"title":{},"body":{"index.html":{}}}],["runs",{"_index":522,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":109,"title":{},"body":{"injectables/AuthServices.html":{}}}],["scalable",{"_index":489,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["serialize",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["series",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["series''})@isenum(posttype)@isnotempty",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":490,"title":{},"body":{"index.html":{}}}],["setup",{"_index":498,"title":{},"body":{"index.html":{}}}],["side",{"_index":491,"title":{},"body":{"index.html":{}}}],["simple",{"_index":541,"title":{},"body":{"index.html":{}}}],["slug",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["spaces",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["specific",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{}}}],["specified",{"_index":259,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":595,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:9",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":441,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.services",{"_index":354,"title":{},"body":{"injectables/UserService.html":{}}}],["src/auth/providers/auth.services.ts",{"_index":91,"title":{},"body":{"injectables/AuthServices.html":{},"coverage.html":{}}}],["src/auth/providers/auth.services.ts:11",{"_index":100,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/auth/providers/auth.services.ts:18",{"_index":97,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/auth/providers/auth.services.ts:5",{"_index":96,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/main.ts",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dto/create",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dto/patch",{"_index":265,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:13",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:25",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:31",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":333,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":335,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":337,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:7",{"_index":339,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":256,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":284,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":102,"title":{},"body":{"injectables/AuthServices.html":{}}}],["src/users/providers/users.service.ts",{"_index":343,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:12",{"_index":349,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/providers/users.service.ts:29",{"_index":351,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.controller.ts",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:48",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:67",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:73",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:78",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":439,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":503,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":506,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":508,"title":{},"body":{"index.html":{}}}],["started",{"_index":483,"title":{"index.html":{}},"body":{}}],["starter",{"_index":495,"title":{},"body":{"index.html":{}}}],["statements",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":580,"title":{},"body":{"index.html":{}}}],["steps",{"_index":519,"title":{},"body":{"index.html":{}}}],["story",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":537,"title":{},"body":{"index.html":{}}}],["string",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["successfully",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@apiquery({name",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully'})@post",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":559,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":611,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":279,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["table",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":520,"title":{},"body":{"index.html":{}}}],["test",{"_index":511,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":514,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":513,"title":{},"body":{"index.html":{}}}],["tests",{"_index":509,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":594,"title":{},"body":{"index.html":{}}}],["thing",{"_index":280,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["this.authservice.isauth",{"_index":356,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.login(body.email",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.postsservice.findall(userid",{"_index":323,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.userservice.findall(getuserparamdto",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findbyid(id",{"_index":107,"title":{},"body":{"injectables/AuthServices.html":{}}}],["this.userservice.findbyid(userid",{"_index":341,"title":{},"body":{"injectables/PostsService.html":{}}}],["throw",{"_index":357,"title":{},"body":{"injectables/UserService.html":{}}}],["thrown",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["thrown'})@isoptional()@isjson",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["time",{"_index":574,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["title",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["touch",{"_index":601,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":110,"title":{},"body":{"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":607,"title":{},"body":{"index.html":{}}}],["type",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthServices.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["types",{"_index":286,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":494,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":510,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":618,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":582,"title":{},"body":{"index.html":{}}}],["url",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["url''})@isstring()@isnotempty()@matches(/^[a",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":106,"title":{},"body":{"injectables/AuthServices.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["user.dto",{"_index":287,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":257,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["users.controller",{"_index":440,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/providers/users.service",{"_index":340,"title":{},"body":{"injectables/PostsService.html":{}}}],["users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":367,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":95,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthServices.html":{},"injectables/PostsService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["uses",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":575,"title":{},"body":{"index.html":{}}}],["valid",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["validationpipe",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":616,"title":{},"body":{"properties.html":{}}}],["video",{"_index":567,"title":{},"body":{"index.html":{}}}],["visit",{"_index":556,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":570,"title":{},"body":{"index.html":{}}}],["void",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["watch",{"_index":504,"title":{},"body":{"index.html":{}}}],["website",{"_index":605,"title":{},"body":{"index.html":{}}}],["whole",{"_index":278,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["without",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["work",{"_index":274,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["working",{"_index":555,"title":{},"body":{"index.html":{}}}],["world",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":277,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["x",{"_index":584,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":598,"title":{},"body":{"index.html":{}}}],["you're",{"_index":515,"title":{},"body":{"index.html":{}}}],["z0",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthServices } from './providers/auth.services';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthServices) {}\n\n  @Post('/login')\n  public login(@Body() body: { email: string; password: string; id: string }) {\n    console.log('body', body);\n    return this.authService.login(body.email, body.password, body.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthServices \n\nAuthServices \n\n\n\nAuthModule\n\nAuthModule\n\nAuthServices  -->\n\nAuthModule->AuthServices \n\n\n\n\n\nAuthServices\n\nAuthServices\n\nAuthModule -->\n\nAuthServices->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthServices\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthServices\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthServices } from './providers/auth.services';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthServices],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthServices],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthServices.html":{"url":"injectables/AuthServices.html","title":"injectable - AuthServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.services.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.services.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.services.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.services.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UserService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthServices {\n  constructor(\n    @Inject(forwardRef(() => UserService))\n    private readonly userService: UserService,\n  ) {}\n\n  public login(email: string, password: string, id: string) {\n    const user = this.userService.findById(id);\n    console.log('user', user);\n\n    return 'SAMPLE_TOKEN';\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/create-posts-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostType, description: 'Possible values  'post', 'page', 'story', 'series''})@IsEnum(PostType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Must be a valid timestamp in ISO8601', example: '2024-03-16T07:46:32+0000'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Serialize your JSON object else a validation error will be thrown'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'For example 'my-url''})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostStatus, description: 'Possible values 'draft', 'scheduled', 'review', 'published''})@IsEnum(PostStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsArray()@IsOptional()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PostType } from '../enums/postType.enum';\nimport { PostStatus } from '../enums/postStatus.enum';\nimport { CreatePostMetaOptionsDto } from './create-posts-meta-options-dto';\n\nexport class CreatePostDto {\n  @ApiProperty()\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: PostType,\n    description: \"Possible values  'post', 'page', 'story', 'series'\",\n  })\n  @IsEnum(PostType)\n  @IsNotEmpty()\n  postType: PostType;\n\n  @ApiProperty({\n    description: \"For example 'my-url'\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: PostStatus,\n    description: \"Possible values 'draft', 'scheduled', 'review', 'published'\",\n  })\n  @IsEnum(PostStatus)\n  @IsNotEmpty()\n  status: PostStatus;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description:\n      'Serialize your JSON object else a validation error will be thrown',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiProperty({\n    description: 'Must be a valid timestamp in ISO8601',\n    example: '2024-03-16T07:46:32+0000',\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishOn?: Date;\n\n  @ApiPropertyOptional()\n  @IsArray()\n  @IsOptional()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n        },\n        value: {\n          type: 'any',\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions?: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/create-posts-meta-options-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-meta-options-dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-posts-meta-options-dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with specified id', example: 1, required: false, type: Number})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Get user with specified id',\n    example: 1,\n    required: false,\n    type: Number,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/patch-posts.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/patch-posts.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\nimport { CreatePostDto } from './create-posts-dto';\n// if we import partial type from nestjs/mapped it would work but we need to re write whole swagger thing again from post to patch\n// so we import partial type from nestjs/swagger\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty()\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createPost\n                            \n                            \n                                    \n                                getPosts\n                            \n                            \n                                    \n                                patchPost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new blog post'})@ApiResponse({status: 201, description: 'You get 201 response if your post created successfully'})@Post('')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        patchPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchPost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dto/create-posts-dto';\nimport { PatchPostDto } from './dto/patch-posts.dto';\n\n@ApiTags('Posts')\n@Controller('posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n\n  @Get('/:userId')\n  getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  @ApiOperation({\n    summary: 'Creates a new blog post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'You get 201 response if your post created successfully',\n  })\n  @Post('')\n  createPost(@Body() createPostDto: CreatePostDto) {\n    console.log('createPostDto', createPostDto);\n    return 'Post created';\n  }\n\n  @Patch()\n  patchPost(@Body() patchPostDto: PatchPostDto) {\n    console.log('patchPostDto', patchPostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../../users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly userService: UserService) {}\n  public findAll(userId: string) {\n    const user = this.userService.findById(userId);\n    return [\n      {\n        user: user,\n        title: 'Post 1',\n        content: 'Content 1',\n        userId: userId,\n      },\n      {\n        user: user,\n        title: 'Post 2',\n        content: 'Content 2',\n        userId: userId,\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthServices)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServices\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDTO: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDTO\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { firstName: string; lastName: string; email: string; id: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { AuthServices } from 'src/auth/providers/auth.services';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(forwardRef(() => AuthServices))\n    private readonly authService: AuthServices,\n  ) {}\n\n  public findAll(\n    getUsersParamDTO: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    console.log(getUsersParamDTO, limit, page);\n    const isAuth = this.authService.isAuth();\n\n    if (!isAuth) {\n      throw new Error('Unauthorized');\n    }\n    return [\n      { firstName: 'John', lastName: 'Doe', email: 'John@gmail.com' },\n      { firstName: 'Bon', lasName: 'Doe', email: 'Bob@gmail.com' },\n    ];\n  }\n\n  public findById(id: string) {\n    console.log(id);\n    return {\n      firstName: 'John',\n      lastName: 'Doe',\n      email: 'John@gmail.com',\n      id: 123,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                            \n                                    \n                                    Public\n                                replaceUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDTO: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({summary: 'Fetches a list of registered user on application'})@ApiResponse({status: 200, description: 'Users fetched successfully'})@ApiQuery({name: 'limit', type: 'number', required: false, description: ' The number of entries return per page', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'Quantity per page of entries', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDTO\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        replaceUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Patch,\n  Post,\n  Delete,\n  Put,\n  Param,\n  Query,\n  ParseIntPipe,\n  DefaultValuePipe,\n  Body,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UserService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get('/:id')\n  @ApiOperation({\n    summary: 'Fetches a list of registered user on application',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Users fetched successfully',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: ' The number of entries return per page',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description: 'Quantity per page of entries',\n    example: 1,\n  })\n  // we can get specific component for params,query or body by passing that field in that ()\n  public getUsers(\n    @Param() getUserParamDTO: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.userService.findAll(getUserParamDTO, limit, page);\n  }\n\n  @Post()\n  public createUser(\n    // @Body(new ValidationPipe()) createUserDto: CreateUserDto,\n    // we removed validation pipe from here and added it in main.ts as global to prevent repeetition\n    @Body() createUserDto: CreateUserDto,\n  ): string {\n    console.log(createUserDto);\n    return 'You sent a post request to /users endpoint';\n  }\n\n  @Patch('/:id')\n  public patchUser(@Body() patchUserDto: PatchUserDto): string {\n    console.log(patchUserDto);\n    return 'You sent a patch request to /users endpoint';\n  }\n\n  @Put()\n  public replaceUser(): string {\n    return 'You sent a put request to /users endpoint';\n  }\n\n  @Delete()\n  public deleteUser(): string {\n    return 'You sent a delete request to /users endpoint';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUsersModule\n\nUsersModule\n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UserService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UserService],\n  exports: [UserService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.services.ts\n            \n            injectable\n            AuthServices\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dto/create-posts-dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dto/create-posts-meta-options-dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dto/patch-posts.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.1.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            PostType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthServices \n\nAuthServices \n\nAuthServices  -->\n\nAuthModule->AuthServices \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthServices\n\nAuthServices\n\nAuthModule -->\n\nAuthServices->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
